<?php
// 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.

$n = 0;
while ($n <= 100) {
    $x = $n % 3;
    if ($x == 0) echo $n;
    $n++;
}



/* 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
0 – ноль.
1 – нечетное число.
2 – четное число.
3 – нечетное число.
…
10 – четное число. */

$n = 0;

function func($n)
{
    if ($n == 0) {
        return "0 – ноль<br>";
    } else if ($n % 2 == 1) {
        return $n . " – нечетное число.<br>";
    } else if ($n % 2 == 0) {
        return $n . " – четное число.<br>";
    }
}

do {
    echo func($n);
    $n++;
} while ($n <= 10);



// Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:
// Московская область:
// Москва, Зеленоград, Клин.
// Ленинградская область:
// Санкт-Петербург, Всеволожск, Павловск, Кронштадт.
// Рязанская область … (названия городов можно найти на maps.yandex.ru) строго соблюдать формат вывода выше, т.е. двоеточие и точка в конце

// Превратить массив в строку, с разделителем - точкой с запятой:

$cities = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    "Рязанская область" => ["Рязань", "Касимов", "Скопин", "Сасово", "Ряжск", "Спасск-Рязанский", "Милославское"],
];

foreach ($cities as $k => $v) {
    echo $k . ":<br>";
    $city =  implode(', ', $v);
    $last = mb_substr($city, 0, -1);
    echo $last .  ".<br>";
}



// 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’). Написать функцию транслитерации строк. Она должна учитывать и заглавные буквы.

$alfabet = [
    'а' => 'a',   'б' => 'b',   'в' => 'v',
    'г' => 'g',   'д' => 'd',   'е' => 'e',
    'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
    'и' => 'i',   'й' => 'y',   'к' => 'k',
    'л' => 'l',   'м' => 'm',   'н' => 'n',
    'о' => 'o',   'п' => 'p',   'р' => 'r',
    'с' => 's',   'т' => 't',   'у' => 'u',
    'ф' => 'f',   'х' => 'h',   'ц' => 'c',
    'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
    'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
    'э' => 'e',   'ю' => 'yu',  'я' => 'ya'
];

function transliteration($variab, $alfabet)
{
    $arr = mb_str_split($variab);
    foreach ($arr as $val1) {
        $compare = mb_strtolower($val1);
        if (array_key_exists($compare, $alfabet)) {
            foreach ($alfabet as $k => $val2) {
                if ($k == $compare) {
                    if ($val1 == mb_strtoupper($val1)) {
                        echo strtoupper($val2);
                    } else {
                        echo $val2;
                    }
                }
            }
        } else {
            transliteration($variab, next($alfabet));
        }
    }
}

transliteration("ЯтутЧтоТоНаписал", $alfabet);



// 5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку. Можно через str_replace

function rep($a)
{
    return str_replace(" ", "_", $a);
}
echo rep('Привет тут какой-то текст');



// 6. В имеющемся шаблоне сайта заменить статичное меню (ul – li) на генерируемое через PHP. Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать. Важное, при желании можно сделать на движке 3. ВАЖНОЕ!*/

$arr = [
    '/' => 'Главная',
    '?page=catalog' => 'Каталог',
    '?page=about' => 'О нас'
];
$menu = "";
foreach ($arr as $k => $v) {

    $menu .= "<li><a href=" . $k . ">" . $v . "</a></li>";
}

// <ul>
echo $menu;
// </ul> 



// 7. *Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла. Выглядеть должно так: for (…){ // здесь пусто} 

for ($i = 0; $i < 10; print_r($i++)) {
}



// 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».

$cities = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    "Рязанская область" => ["Рязань", "Касимов", "Скопин", "Сасово", "Ряжск", "Спасск-Рязанский", "Милославское"],
];

foreach ($cities as $k => $v) {
    for ($i = 0; $i < count($v); $i++) {
        $str = $v[$i];
        if (mb_substr($str, 0, 1, "utf-8") == 'К') {
            echo $str .  ".<br>";
        }
    }
}



// 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).

$alfabet = [
    'а' => 'a',   'б' => 'b',   'в' => 'v',
    'г' => 'g',   'д' => 'd',   'е' => 'e',
    'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
    'и' => 'i',   'й' => 'y',   'к' => 'k',
    'л' => 'l',   'м' => 'm',   'н' => 'n',
    'о' => 'o',   'п' => 'p',   'р' => 'r',
    'с' => 's',   'т' => 't',   'у' => 'u',
    'ф' => 'f',   'х' => 'h',   'ц' => 'c',
    'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
    'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
    'э' => 'e',   'ю' => 'yu',  'я' => 'ya',
   /*  ' ' => '_' допустимо ли такое решение замены пробела? */
];

function transliteration2($variab, $alfabet)
{
    $arr = mb_str_split($variab);
    foreach ($arr as $val1) {
        $compare = mb_strtolower($val1);
        if (array_key_exists($compare, $alfabet)) {
            foreach ($alfabet as $k => $val2) {
                if ($k == $compare) {
                    if ($val1 == mb_strtoupper($val1)) {
                        echo strtoupper($val2);
                    } else {
                        echo $val2;
                    }
                }
            }
        } else if ($compare == " ") { // не смог тут найти применение str_replace(); поэтому сделал так
            echo "_";
        } else {
            transliteration2($variab, next($alfabet));
        }
    }
}

transliteration2("Мне кажется можно было Проще придумать конструкЦиЮ", $alfabet);
